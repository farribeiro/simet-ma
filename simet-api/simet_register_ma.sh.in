#!/bin/sh
# Refreshes SIMET SIMET MA agent-id and auth token (generic)
# Copyright (c) 2018 NIC.br  <medicoes@simet.nic.br>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see
# <http://www.gnu.org/licenses/>.

# parameters:
#   --boot   (optional) shorten wait times and not restart the service

OUTFILE=
abend() {
	echo "$0: $*" >&2
	[ -n "$OUTFILE" ] && rm -f "$OUTFILE" 2>/dev/null
	exit 1
}

[ -r @SIMETLIBDIR@/simet-ma.conf ] && . @SIMETLIBDIR@/simet-ma.conf
[ -r @SIMETCONFDIR@/simet-ma.conf ] && . @SIMETCONFDIR@/simet-ma.conf
AGENT_ID_FILE=${AGENT_ID_FILE:-@SIMETCONFDIR@/agent-id}
AGENT_TOKEN_FILE=${AGENT_TOKEN_FILE:-@SIMETCONFDIR@/agent.jwt}
AGENT_TOKEN_LOCK=${AGENT_TOKEN_LOCK:-@LOCALSTATEDIR@/lock/simet-agent-token.lock}
API_AGENT_TOKEN=${API_AGENT_TOKEN:-https://api.simet.nic.br/measurement/jwt}
SIMETMA_RECONFIG=${SIMETMA_RECONFIG:-/etc/init.d/simet-ma restart}
JSONFILTER=${JSONFILTER:-jsonfilter}

USERAGENT="-A simet-agent-unix"
CURLOPT="-q -s -m 15 --max-filesize 4000"
CURLOPT2="--retry 10 --retry-max-time 3600"

case "$1" in
	--boot)
		shift
		CURLOPT2="--retry 3 --retry-max-time 30"
		SIMETMA_RECONFIG=
	;;
esac

apicall() {
	curl $CURLOPT $CURLOPT2 $USERAGENT \
		-X POST -f -L -j -o "$OUTFILE" \
		-d simetAT="$OLDAT" -d "deviceInfo=$USERAGENT" \
		"$API_AGENT_TOKEN"
}

gettoken() {
	OLDAT=
	OLDAID=
	[ -r "$AGENT_ID_FILE" ] && OLDAID=$(cat "$AGENT_ID_FILE")
	[ -r "$AGENT_TOKEN_FILE" ] && OLDAT=$(cat "$AGENT_TOKEN_FILE")

	OUTFILE=$(mktemp -q -t simet-at-register.$$.XXXXXXXXXX) || abend "failed to create tmpfile"
	apicall || abend "failed to contact agent-token service"
	SID=$($JSONFILTER -i "$OUTFILE" -e "AID=@.agentId" -e "AT=@.token") || abend "illegal response from agent-token service"
	rm -f "$OUTFILE"
	eval "$SID" || abend "internal error"
	[ x"$AID" != x"$OLDAID" ] && echo "$AID" > "$AGENT_ID_FILE"
	[ x"$AT"  != x"$OLDAT"  ] && echo "$AT" > "$AGENT_TOKEN_FILE"

	if [ ! -r "$AGENT_ID_FILE" ] || [ -z "$AID" ] || [ ! -r "$AGENT_TOKEN_FILE" ] || [ -z "$AT" ] ; then
		abend "failed to register, please retry later"
	fi

	if [ x"$AID" != x"$OLDAID" ] || [ x"$AT"  != x"$OLDAT"  ] ; then
		if [ -n "$SIMETMA_RECONFIG" ] ; then
			$SIMETMA_RECONFIG || true
		fi
	fi

	echo "$0: SIMET: LMAP measurement agent id: $AID"
	:
}

AGENT_LOCK_DIR=$(dirname "$AGENT_TOKEN_LOCK")
[ -d "$AGENT_LOCK_DIR" ] || mkdir -p -m 0755 -- "$AGENT_LOCK_DIR"
( flock -n -x 9 && gettoken ) <&- 9>> "$AGENT_TOKEN_LOCK"
